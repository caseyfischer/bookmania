// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  UNDECIDED
  VOTING
  APPROVED
  REJECTED
  REQUESTED
  CONFIRMED
  DENIED
}

model User {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(50)
  password  String   @db.VarChar(50)
  email     String   @db.VarChar(255)
  createdAt DateTime @default(now())
  lastLogin DateTime @default(now())
  Event     Event[]
}

model Event {
  id          Int       @id @default(autoincrement())
  description String       @db.VarChar(255)
  createdAt   DateTime     @default(now())
  createdBy   User?        @relation(fields: [userId], references: [id])
  userId      String
  EventDate   EventDate[]
  EventBand   EventBand[]
  EventVenue  EventVenue[]
}

model EventDate {
  id      String   @id @default(uuid())
  date    DateTime
  status  Status   @default(UNDECIDED)
  event   Event    @relation(fields: [eventId], references: [id])
  eventId Int
}

model EventBand {
  id      String @id @default(uuid())
  name    String @db.VarChar(255)
  status  Status
  event   Event  @relation(fields: [eventId], references: [id])
  eventId Int
}

model EventVenue {
  id      String @id @default(uuid())
  name    String @db.VarChar(255)
  event   Event  @relation(fields: [eventId], references: [id])
  eventId Int
}
